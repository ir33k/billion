One Billion Row Challenge
=========================

My attempt of solving The One Billion Row Challenge [1] in C.

[1] https://github.com/gunnarmorling/1brc/


Rules and limits
----------------

Rules and limits, from original repo 1brc/README.md, that are relevant
to solutions not written in Java:

- No external library dependencies may be used.
- Implementations must be provided as a single source file.
- The computation must happen at application _runtime_, i.e. you cannot
  process the measurements file at _build time_ (for instance, when using
  GraalVM) and just bake the result into the binary.
- Input value ranges are as follows:
    - Station name: non null UTF-8 string of min length 1 character and
      max length 100 bytes, containing neither `;` nor `\n` characters.
    - Temperature value: non null double between -99.9 (inclusive) and
      99.9 (inclusive), always with one fractional digit.
- There is a maximum of 10,000 unique station names.
- Line endings in the file are `\n` characters on all platforms.
- Implementations must not rely on specifics of a given data set, e.g. any
  valid station name as per the constraints above and any data distribution
  (number of measurements per station) must be supported.
- The rounding of output values must be done using the semantics of IEEE
  754 rounding-direction "roundTowardPositive".


Measurements
------------

Based on src/main/java/dev/morling/onebrc/CreateMeasurements.java
from original repo.


Build and run
-------------

	$ ./build

	$./gen 1000       > data1k.tmp
	$./gen 1000000    > data1m.tmp
	$./gen 1000000000 > data1g.tmp

	$ ./billion < data1k.tmp
	$ ./billion < data1m.tmp
	$ ./billion < data1g.tmp
